


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Runs on any Cortex M processor
    3 00000000         ; A very simple first project implementing a random numb
                       er generator
    4 00000000         ; Daniel Valvano
    5 00000000         ; May 4, 2012
    6 00000000         
    7 00000000         ;  This example accompanies the book
    8 00000000         ;  "Embedded Systems: Introduction to Arm Cortex M Micro
                       controllers",
    9 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2012
   10 00000000         ;  Section 3.3.10, Program 3.12
   11 00000000         ;
   12 00000000         ;Copyright 2012 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   13 00000000         ;   You may use, edit, run or distribute this file
   14 00000000         ;   as long as the above copyright notice remains
   15 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   16 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   17 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   18 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   19 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   20 00000000         ;For more information about my classes, my research, and
                        my books, see
   21 00000000         ;http://users.ece.utexas.edu/~valvano/
   22 00000000         
   23 00000000         
   24 00000000                 THUMB
   25 00000000                 AREA             DATA, ALIGN=2
   26 00000000                 ALIGN
   27 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   28 00000000                 EXPORT           Start
   29 00000000         ;unlock 0x4C4F434B
   30 00000000         
   31 00000000         ;PF4 is SW1
   32 00000000         ;PF0 is SW2
   33 00000000         ;PF1 is RGB Red
   34 00000000         ;Enable Clock RCGCGPIO p338
   35 00000000         ;Set direction 1 is out 0 is in. GPIODIR
   36 00000000         ;DEN 
   37 00000000         ; 0x3FC
   38 00000000         
   39 00000000         
   40 00000000         Start
   41 00000000 F24E 1008 
              F2C4 000F        mov32            R0, #0x400FE108 
                                                            ; Enable GPIO Clock
                                                            
   42 00000008 F04F 0120       mov              R1, #0x20
   43 0000000C 6001            str              R1, [R0]
   44 0000000E         
   45 0000000E F245 0000 
              F2C4 0002        mov32            R0, #0x40025000



ARM Macro Assembler    Page 2 


   46 00000016 F244 314B 
              F6C4 414F        mov32            R1, #0x4C4F434B
   47 0000001E F8C0 1520       str              R1, [R0,#0x520] ;GPIO unlock
   48 00000022 F04F 011F       mov              R1, #0x1F
   49 00000026 F8C0 1524       str              R1, [R0,#0x524] ;GPIOCR
   50 0000002A F04F 0111       mov              R1, #0x11
   51 0000002E F8C0 1510       str              R1, [R0,#0x510]
   52 00000032 F04F 010E       mov              R1, #0x0E
   53 00000036 F8C0 1400       str              R1, [R0,#0x400] ;GPIODIR
   54 0000003A F04F 011F       mov              R1, #0x1F
   55 0000003E F8C0 151C       str              R1, [R0,#0x51C] ;digital enable
                                                            
   56 00000042         
   57 00000042         ; R0 gpioF
   58 00000042         ; R1 on
   59 00000042         ; R2 off
   60 00000042         ; R3 
   61 00000042         loop
   62 00000042 F8D0 13FC       ldr              R1, [R0,#0x3FC]
   63 00000046 F001 0111       and              R1, #0x11
   64 0000004A 2911            cmp              R1, #0x11
   65 0000004C D0F9            beq              loop
   66 0000004E         
   67 0000004E 2900            cmp              R1, #0x00
   68 00000050 D0F7            beq              loop
   69 00000052         
   70 00000052 2901            cmp              R1, #0x01
   71 00000054 BF08            it               eq
   72 00000056 F000 F804       bleq             sw1
   73 0000005A BF18 F000 
              F821             blne             sw2
   74 00000060         
   75 00000060 E7EF            b                loop
   76 00000062         
   77 00000062         sw1
   78 00000062 B500            push{lr}
   79 00000064         wait
   80 00000064 F000 F83C       bl               delay
   81 00000068 F8D0 13FC       ldr              R1,[R0,#0x3FC]
   82 0000006C F001 0101       and              R1, #0x01
   83 00000070 2901            cmp              R1, #0x01
   84 00000072 D0F7            beq              wait
   85 00000074         
   86 00000074 F04F 0202       mov              R2, #0x2
   87 00000078 F04F 0300       mov              R3, #0x0
   88 0000007C 6083            str              R3, [R0,#0x08]
   89 0000007E F000 F82F       bl               delay
   90 00000082 6082            str              R2, [R0,#0x08]
   91 00000084 F000 F82C       bl               delay
   92 00000088 6083            str              R3, [R0,#0x08]
   93 0000008A F000 F829       bl               delay
   94 0000008E 6082            str              R2, [R0,#0x08]
   95 00000090 F000 F826       bl               delay
   96 00000094 6083            str              R3, [R0,#0x08]
   97 00000096 F000 F823       bl               delay
   98 0000009A 6082            str              R2, [R0,#0x08]
   99 0000009C         
  100 0000009C F85D EB04       pop{lr}
  101 000000A0 4770            bx               lr



ARM Macro Assembler    Page 3 


  102 000000A2         
  103 000000A2         sw2
  104 000000A2 B500            push{lr}
  105 000000A4         wait1
  106 000000A4 F000 F81C       bl               delay
  107 000000A8 F8D0 13FC       ldr              R1,[R0,#0x3FC]
  108 000000AC F001 0110       and              R1, #0x10
  109 000000B0 2910            cmp              R1, #0x10
  110 000000B2 D0F7            beq              wait1
  111 000000B4         
  112 000000B4 F04F 0202       mov              R2, #0x2
  113 000000B8 F04F 0300       mov              R3, #0x0
  114 000000BC 6083            str              R3, [R0,#0x08]
  115 000000BE F000 F80F       bl               delay
  116 000000C2 6082            str              R2, [R0,#0x08]
  117 000000C4 F000 F80C       bl               delay
  118 000000C8 6083            str              R3, [R0,#0x08]
  119 000000CA F000 F809       bl               delay
  120 000000CE F000 F807       bl               delay
  121 000000D2 6082            str              R2, [R0,#0x08]
  122 000000D4 F000 F804       bl               delay
  123 000000D8 6083            str              R3, [R0,#0x08]
  124 000000DA F85D EB04       pop{lr}
  125 000000DE 4770            bx               lr
  126 000000E0         
  127 000000E0         delay
  128 000000E0 F04F 0500       mov              R5, #0x0
  129 000000E4 F64F 76FF 
              F2C0 0600        mov32            R6, #0xFFFF
  130 000000EC F240 0700 
              F2C0 0700        mov32            R7, #0x0
  131 000000F4         delay_loop
  132 000000F4 F105 0501       add              R5, #0x1
  133 000000F8 42B5            cmp              R5, R6
  134 000000FA D1FB            bne              delay_loop
  135 000000FC 4770            bx               lr
  136 000000FE         
  137 000000FE E7FE            B                Start
  138 00000100         
  139 00000100                 ALIGN
  140 00000100                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
ects\main.d -o.\objects\main.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\
ARM\CMSIS\4.1.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.0.0\Device\
Include\TM4C123 --predefine="__EVAL SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 40 in file main.s
   Uses
      At line 28 in file main.s
      At line 137 in file main.s

delay 000000E0

Symbol: delay
   Definitions
      At line 127 in file main.s
   Uses
      At line 80 in file main.s
      At line 89 in file main.s
      At line 91 in file main.s
      At line 93 in file main.s
      At line 95 in file main.s
      At line 97 in file main.s
      At line 106 in file main.s
      At line 115 in file main.s
      At line 117 in file main.s
      At line 119 in file main.s
      At line 120 in file main.s
      At line 122 in file main.s

delay_loop 000000F4

Symbol: delay_loop
   Definitions
      At line 131 in file main.s
   Uses
      At line 134 in file main.s
Comment: delay_loop used once
loop 00000042

Symbol: loop
   Definitions
      At line 61 in file main.s
   Uses
      At line 65 in file main.s
      At line 68 in file main.s
      At line 75 in file main.s

sw1 00000062

Symbol: sw1
   Definitions
      At line 77 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 72 in file main.s
Comment: sw1 used once
sw2 000000A2

Symbol: sw2
   Definitions
      At line 103 in file main.s
   Uses
      At line 73 in file main.s
Comment: sw2 used once
wait 00000064

Symbol: wait
   Definitions
      At line 79 in file main.s
   Uses
      At line 84 in file main.s
Comment: wait used once
wait1 000000A4

Symbol: wait1
   Definitions
      At line 105 in file main.s
   Uses
      At line 110 in file main.s
Comment: wait1 used once
9 symbols
342 symbols in table
